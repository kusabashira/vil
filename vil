#!/bin/sh
set -eu

version=0.2.1

usage() {
  cat <<__USAGE__
Usage: ${0##*/} [OPTION]... {script-only-if-no-other-script} [input-file]...
Edit text with Vim script.

Options:
  -n, --quiet, --silent
                 suppress automatic printing of buffer
  -e script, --expression=script
                 add the script to the commands to be executed
  -f script-file, --file=script-file
                 add the contents of script-file to the commands to be executed
  --help
                 display this help and exit
  --version
                 display version information and exit
__USAGE__
}

script=$(mktemp "/tmp/${0##*/}.tmp.XXXXXX")
src=$(mktemp "/tmp/${0##*/}.tmp.XXXXXX")
atexit() {
	rm -f -- "$script" "$src"
}
trap "atexit" EXIT
trap "trap - EXIT; atexit; exit -1" INT PIPE TERM

require_print=true
require_program=true
while [ $# -ge 1 ]; do
  case $1 in
    -n|--quiet|--silent)
      require_print=false
      ;;
    -n*)
      require_print=false
      next=-${1#-n}
      shift
      set -- "$next" "$@"
      continue
      ;;
    -e|--expression)
      require_program=false
      if [ $# -lt 2 ]; then
        printf "%s\n" "${0##*/}: option requires an argument -- '${1##*-}'" >&2
        exit 2
      fi
      printf "%s\n" "$2" >> "$script"
      shift
      ;;
    -e*)
      require_program=false
      printf "%s\n" "${1#-e}" >> "$script"
      ;;
    --expression=*)
      require_program=false
      printf "%s\n" "${1#--expression=}" >> "$script"
      ;;
    -f|--file)
      require_program=false
      if [ $# -lt 2 ]; then
        printf "%s\n" "${0##*/}: option requires an argument -- '${1##*-}'" >&2
        exit 2
      fi
      cat -- "$2" >> "$script"
      shift
      ;;
    -f*)
      require_program=false
      cat -- "${1#-f}" >> "$script"
      ;;
    --file=*)
      require_program=false
      cat -- "${1#--file=}" >> "$script"
      ;;
    --help)
      usage
      exit 0
      ;;
    --version)
      printf "%s\n" "$version"
      exit 0
      ;;
    --)
      shift
      break
      ;;
    -*)
      printf "%s\n" "${0##*/}: unrecognized option '$1'" >&2
      exit 2
      ;;
    *)
      break
      ;;
  esac
  shift
done
if $require_program; then
  if [ $# -lt 1 ]; then
    usage >&2
    exit 2
  fi
  printf "%s\n" "$1" >> "$script"
  shift
fi
if $require_print; then
  printf "%s\n" "%print" >> "$script"
fi
printf "%s\n" "qall!" >> "$script"

cat -- "$@" > "$src"
vim -u NONE -i NONE -N -n -e -s -S "$script" -- "$src"
